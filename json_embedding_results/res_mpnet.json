[
  {
    "query": "What is Chameleon Cloud?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "Frequently Asked Questions | Chameleon\nFrequently Asked Questions\nGeneral\nWhat is Chameleon?\nChameleon is an experimental testbed for Computer Science funded by the NSF FutureCloud program. Chameleon is built over two sites, the University of Chicago and TACC, offering a total of over 550 nodes and 5 PB of space in twelve\nStandard Cloud Unit (SCU) racks\n. To effectively support Computer Science experiments, Chameleon offers bare metal reconfigurability on most of the hardware. To provide easy access to educational users, two SCUs at TACC (one sixth of the testbed) are configured with OpenStack KVM. You can read more about Chameleon\nhere\n.\nHow should I acknowledge\u00a0Chameleon?",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 2,
        "content": "Graphical User Interface (GUI) \u2014 Chameleon Cloud Documentation\nGraphical User Interface (GUI)\nEdit on GitHub\nGraphical User Interface (GUI)\n\uf0c1\nThe Graphical User Interface (GUI) provides a point-and-click experience for\nworking with Chameleon resources. From the GUI, you may perform tasks such as\nmanage and launch instances, and configure custom networking. Additionally, you\nmay download an\nOpenStack RC\nfile from the GUI if you wish to work with the\nCommand Line Interface\n, instead. The Chameleon GUI is built on top\nof\nOpenStack Horizon\n(running OpenStack Antelope). Chameleon\nhas multiple resource sites, each with its own URL (though it is possible to\neasily switch from one to other, see\nProject and Site Menu\n).\nCHI@TACC\n- Texas Advanced Computing Center:\nhttps://chi.tacc.chameleoncloud.org\nCHI@UC\n- University of Chicago:\nhttps://chi.uc.chameleoncloud.org\nCHI@NCAR\n- National Center for Atmospheric Research:\nhttps://chi.ncar.chameleoncloud.org\nCHI@Edge\n- Edge computing testbed:",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/technical/gui/index.html"
      },
      {
        "match_number": 3,
        "content": "Getting Help \u2014 Chameleon Cloud Documentation\nGetting Help\nEdit on GitHub\nGetting Help\n\uf0c1\nChameleon offers several support channels to assist users with their\nquestions and issues. Depending on the nature of your inquiry, you can choose\nfrom the following options:\nCommunity Forum\n\uf0c1\nNote\nFor immediate assistance or urgent issues, use the Help Desk rather\nthan the community forum. The Help Desk ensures your request receives prompt\nattention from Chameleon staff.\nJoin the\nChameleon Community Forums\nto connect\nwith other users, ask questions, and share experiences. The forum provides a space for:\nUser discussions and community support\nNon-urgent questions about using Chameleon\nSharing best practices and experimental approaches\nAnnouncements of new features and capabilities\nThe forum is actively monitored by Chameleon staff and experienced community members\nwho provide assistance on a best-effort basis. For immediate help or urgent issues,\nuse the Help Desk instead.\nOutages\n\uf0c1\nThe\nOutages",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/user/help.html"
      },
      {
        "match_number": 4,
        "content": "month={July},\nyear={2020}\n}\nVisit\nthe papers page\nfor more Chameleon papers.\nWhere do I find help?\nIf you need any help with specific questions related to Chameleon and requests, the Chameleon help desk\u00a0staff is here to support you. You can easily reach the help desk by submitting tickets through the\nhelp desk portal\n, visible next to your username on the Chameleon home page.\nWe also offer users a\nForum\nas a space for user discussion and non-urgent questions about using Chameleon Cloud that will be addressed on a best-effort basis. However, if you need help immediately, please reach out to our\nHelp Desk\n.\nProject and Allocation Management\nHow do I apply for a Chameleon project?\nProject applications may be filled out\nhere\n. If you want to apply for a project you have to be\nPI eligible",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      }
    ]
  },
  {
    "query": "How do I request PI status?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "We do occasionally provide case-by-case exceptions to this guideline in well-justified cases.\nHow to Request PI Eligibility\n\uf0c1\nIf you meet the eligibility criteria above, you can request PI status on Chameleon by following these steps:\nComplete your user profile\n: Ensure your\nChameleon profile\nis complete with your institutional affiliation and contact information.\nRequest PI eligibility\n: In your profile page, click the \u201cEdit Profile\u201d button, then check the\n\u201cRequest PI Eligibility\u201d checkbox and save your profile.\nWait for review\n: Chameleon PI status requests are typically reviewed and approved within\none business day.\nCreate your first project\n: Once approved, you can create a new project by going to the\nProjects Dashboard\nand clicking\n\u201cCreate a Project.\u201d\nTip\nStudents\n: If you don\u2019t meet the PI eligibility criteria (most graduate students do not),\nask your faculty advisor or research supervisor to request PI status and add you to their project.",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/user/pi_eligibility.html"
      },
      {
        "match_number": 2,
        "content": "Independent museums, observatories, libraries, research laboratories, professional societies, and similar organizations\nin the United States that are directly associated with educational or research activities are eligible.\nState educational offices or organizations and local school districts\nmay submit allocation requests intended to broaden the impact, accelerate the pace, and increase the effectiveness of improvements in science, mathematics, and engineering education in both K-12 and post-secondary levels. A teacher or educator at an accredited public or private K-12 school is eligible to apply for an allocation as PI.\nWe do occasionally provide case-by-case exceptions to this guideline in well-justified cases.\nHow to Request PI Eligibility\n\uf0c1\nIf you meet the eligibility criteria above, you can request PI status on Chameleon by following these steps:\nComplete your user profile\n: Ensure your\nChameleon profile\nis complete with your institutional affiliation and contact information.",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/user/pi_eligibility.html"
      },
      {
        "match_number": 3,
        "content": "login to the portal\n. Once logged in, you should be at\nDashboard\npage automatically. If not, you can access your\nDashboard\nvia the\ndropdown list on top right of the screen.\nQuick Navigation\nDashboard overview\n- View projects and tickets\nCreating a project\n- Start a new research project\nManaging users\n- Add/remove team members and set roles\nAllocation management\n- Request renewals and recharges\nPublications tracking\n- Maintain research output records\nRelated Documentation\nPI eligibility requirements\n- Criteria for creating projects\nUser authentication\n- Login and account configuration\nGetting help\n- Support channels and community resources\nDashboard\n\uf0c1\nThe Dashboard\u2019s main page consists of two control panels - the\nActive Projects\ncontrol panel and the\nOpen Tickets\npanel.\nThe project dashboard\n\uf0c1\nThe\nActive Projects\ncontrol panel allows you to view all your active projects\nand their current usage. You may click on a project to view details.\nThe\nOpen Tickets",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/user/project.html"
      },
      {
        "match_number": 4,
        "content": "How do I make sure that my PI status is reflected in my profile?\nIf you are eligible to be PI (you can verify in\nthis section\n), in order to apply for a project you need to make sure that your Chameleon profile reflects your status. You can do so on the\nEdit Account Profile page\n. Simply check the \"Request PI Eligibility\" checkbox and save you Account Profile.\nHow can I extend a Chameleon lease?\nAn active Chameleon lease within 48 hours of its end time can be prolonged by up to 7 days from the moment of request if resources are available. To prolong a lease, click on the \u201cUpdate Lease\u201d button in the Reservations panel of the CHI OpenStack dashboard, and enter the additional duration requested in the \u201cProlong for\u201d boxes. If there is an advance reservation blocking your lease prolongation that could potentially be moved, you can interact through the users mailing list to coordinate with others users.\nWhat if I need a lease that is longer than the limitation (i.e., 7 days)?",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      }
    ]
  },
  {
    "query": "Am I charged for the resources in Chameleon?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "Network resources are charged in SUs as well, at 1x the rate of compute servers, except for ExoGENI VLANs. For example, 1 hour allocation of 1 floating IP costs 1 SU. ExoGeni VLANs are charged at 4x the rate of compute servers.\nSUs are charged the same regardless of use case\u00a0\u2014 you are charged for the fraction of the resource your experiment occupies, regardless of the type of the experiment.\nThe basic principle for charging service units for Chameleon resources is to evaluate the amount of time a fraction of the resource is unavailable to other users. If a reservation is made through the portal for a particular date/time in the future, the user will be charged for this time regardless of whether the reservation is actually used, as the Chameleon scheduling system will have to drain the appropriate part of the system to satisfy the reservation, even if the nodes requested are not actually used. A reservation request may be cancelled in which case no charges will apply.",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 2,
        "content": "What are the policies on Chameleon resource usage?\nAllocation:\nChameleon projects are granted allocations of \"service units\",\u00a0currently set to 20,000 service units for 6 months. Leases\u00a0are charged against the allocation's balance of service units. Allocations can be renewed or extended. See the\nproject management documentation\nfor more details on Chameleon allocations\nLeases:\nSpecialized hardware on Chameleon can sometimes be in high demand and low supply. Like fishing boats sharing a pond, we must beware to avoid a tragedy of the commons and adopt community practices that encourage efficient and fair resource use.\nTo ensure fairness to all users, resource reservations (leases) are subject to the following policies:\nA new lease cannot conflict with a pre-existing one, but can be scheduled in the future if needed.\nYou can request a lease duration of up to 7 days.\nWithin 48 hours of lease expiry, you can request an extension, for up to an additional 7 days.\nKVM resources\ndo not",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 3,
        "content": ". From there, the PI may follow the instructions on how to\nmanage users\n.\nWhat are the units of an allocation, and how am I charged?\nChameleon allocations can consist of several components of the system. Users can request allocation of individual compute nodes, storage servers, or complete\nStandard Cloud Unit (SCU) racks\nwhich contain compute servers, storage nodes, and an open flow switch.\nCompute servers are allocated in Service Units (SUs), which equates to one hour of wall clock time on a single bare metal server. Note this unit differs from traditional HPC or cloud service units that are charged in core-hours; a Chameleon SU is a full server, as the type of experiments and performance measurements users may wish to do may be contaminated by sharing nodes.",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 4,
        "content": "My PI/Professor/Colleague already has a Chameleon Project. How do I get added as a user on the project?\nYou will need to contact the project PI and request that they add you as a user. Provide the PI with your Chameleon username. The project PI should visit the\nChameleon Project Management page\n. From there, the PI may follow the instructions on how to\nmanage users\n.\nWhat are the units of an allocation, and how am I charged?\nChameleon allocations can consist of several components of the system. Users can request allocation of individual compute nodes, storage servers, or complete\nStandard Cloud Unit (SCU) racks\nwhich contain compute servers, storage nodes, and an open flow switch.",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      }
    ]
  },
  {
    "query": "How long can I reserve hardware?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "To ensure fairness to all users, resource reservations (leases) are subject to the following policies:\nA new lease cannot conflict with a pre-existing one, but can be scheduled in the future if needed.\nYou can request a lease duration of up to 7 days.\nWithin 48 hours of lease expiry, you can request an extension, for up to an additional 7 days.\nKVM resources\ndo not\nrequire a lease, and will remain active as long as your allocation is active.\nIn addition,\nwe actively discourage \u201clease stacking\u201d\u2014the practice of obtaining multiple overlapping reservations for resources (e.g., compute instances, storage, or networking components) to extend project usage beyond typical limits or to ensure continuous access.",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 2,
        "content": "KVM resources\ndo not\nrequire a lease, and will remain active as long as your allocation is active.\nIn addition,\nwe actively discourage \u201clease stacking\u201d\u2014the practice of obtaining multiple overlapping reservations for resources (e.g., compute instances, storage, or networking components) to extend project usage beyond typical limits or to ensure continuous access.\nPlease do not try to circumvent the one week lease restriction by stacking leases. Engaging in such stacking could lead to resource hoarding, impacting the availability for other users. Our experience has shown that such conduct results in idle hardware capacity and creates negative incentives for all users to \u201coverfish\u201d the pond out of fear that others will do so first.",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 3,
        "content": "What are the policies on Chameleon resource usage?\nAllocation:\nChameleon projects are granted allocations of \"service units\",\u00a0currently set to 20,000 service units for 6 months. Leases\u00a0are charged against the allocation's balance of service units. Allocations can be renewed or extended. See the\nproject management documentation\nfor more details on Chameleon allocations\nLeases:\nSpecialized hardware on Chameleon can sometimes be in high demand and low supply. Like fishing boats sharing a pond, we must beware to avoid a tragedy of the commons and adopt community practices that encourage efficient and fair resource use.\nTo ensure fairness to all users, resource reservations (leases) are subject to the following policies:\nA new lease cannot conflict with a pre-existing one, but can be scheduled in the future if needed.\nYou can request a lease duration of up to 7 days.\nWithin 48 hours of lease expiry, you can request an extension, for up to an additional 7 days.\nKVM resources\ndo not",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 4,
        "content": "the hardware reserved.\nClick the \u201cHost Calendar\u201d button now. You will be taken to a new page with a\nGnatt chart.\nEach row in the chart represents a node of the specific \u201cNode Type\u201d specified\nat the top of the calendar. You can change this to display the calendar for\ndifferent node types.\nAttention\n\u201cNode Types\u201d available in the filter menu will be restricted by site. You will\nonly see node types available for the specific site that you are currently\nusing.\nOur preferred node type is available on demand, so let\u2019s navigate back to our\nLeases (\u201cReservations -> Leases\u201d) page to create a new lease. Click the \u201cCreate\nLease\u201d button in the top right corner of the page.\nClicking this button will then open a web form. Let\u2019s go through the web form\nstep by step.\nGeneral\nSpecify your lease name and duration.\n\uf0c1\nIn this section, add a name for your lease (\nmy-first-lease\n). To\ncreate an on-demand lease, we can click next, because the form will",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/getting-started/index.html"
      }
    ]
  },
  {
    "query": "What is the process to request a project?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "one business day.\nCreate your first project\n: Once approved, you can create a new project by going to the\nProjects Dashboard\nand clicking\n\u201cCreate a Project.\u201d\nTip\nStudents\n: If you don\u2019t meet the PI eligibility criteria (most graduate students do not),\nask your faculty advisor or research supervisor to request PI status and add you to their project.\nThis is the most common approach for student researchers.\nFor questions about PI eligibility or if you believe you have a special case that warrants\nconsideration, contact our\nHelp Desk\n.\nImprove this page:\nReport an issue or suggest improvements",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/user/pi_eligibility.html"
      },
      {
        "match_number": 2,
        "content": "will see all of the details submitted with the request. A decision can be made\nby choosing \u201capproved\u201d or \u201crejected\u201d in the selector, and then clicking submit.\nAfter this decision is made, an email is sent to the requestor with the result.\nIf the request is approved, an invitation is sent to the user.\nUsing an Invitation\n\uf0c1\nIf your daypass request is approved, an email will be sent to you with an\ninvite link. After clicking this link, you will be automatically added to the\nproject. The email will also mention how long the invitation is for. When the\ninvite is accepted, you will be taken to the project page for the\nreproducibility project. Note the ID of the project (CHI-XXXXX), which\nmay be needed to configure an artifact.\nNext, you can navigate back to the original artifact URL you were given. The\n\u201cLaunch\u201d button can be used now to start running the artifact.\nAfter the duration for the invite has passed, you will be automatically removed\nfrom the project.\nImprove this page:",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/technical/daypass/index.html"
      },
      {
        "match_number": 3,
        "content": "10 instances\n20 VCPUs\n50 GB RAM\n10 volumes\n50 floating IP addresses\nIf your project requires more resources than this, your quota can be increased upon request via the\nHelp Desk\n.\nWhat is the format of an allocation proposal?\nA Chameleon Allocation request consists of the following components:\nProject Title\nProject abstract describing the proposed experiments including the type of resources needed; this part is required and may be published on Chameleon website (~200 words)\nSupplemental details; this is an optional extension of the project abstract, potentially including details that the PI does not wish to publish such as e.g., sources of funding that support the proposed research (500 words maximum)\nWhat criteria is used to review project proposals?",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 4,
        "content": "Supplemental details; this is an optional extension of the project abstract, potentially including details that the PI does not wish to publish such as e.g., sources of funding that support the proposed research (500 words maximum)\nWhat criteria is used to review project proposals?\nRequests for projects and allocations are currently reviewed for merit by project operators with a future move towards review by independent review board composed of Chameleon Science Advisory Board members. The following criteria are used:\nPI eligibility\nRelevance of the proposed experiment to cloud computing research; scientific merit and significance of the proposed experiments\nDemonstrated need for Chameleon resources, methodology appropriate to the use of the Chameleon resource, justification of the requested allocation\nSuccess of prior or other existing allocations (for renewals) in terms of published research results and new funding",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      }
    ]
  },
  {
    "query": "What types of hardware are available on Chameleon Cloud?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "exclusive root access.\nNote\nChameleon also offers a multi-tenant, virtualized cloud, with fewer\nfunctionalities and a smaller scale. See\nKVM\nfor more details.\nBelow, we will walk through the steps on how to launch a bare metal instance using the\ngraphical user interface (GUI) or web application on the\nChameleon\nportal.\nSee the\nfinal section\nto complete the same steps using Jupyter\nand\npython-chi\n, Chameleon\u2019s Python library with custom utilities to help with\nexperiment orchestration.\nWarm Up: Pick Your Hardware\n\uf0c1\nChameleon resources are available at multiple sites, e.g.,\nCHI@TACC\nand\nCHI@UC\n. Check out our\nHardware Discovery Catalog\n, where you can search and\nfilter for hardware across all Chameleon sites based on multiple criteria,\nincluding memory, thread count, CPUs, GPUs, and more. This catalog is the best\nplace to start your hardware discovery.\nImportant\nChameleon resources are available\nper site\n, which means that you\nmust\nuse a specific site to access certain hardware.",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/getting-started/index.html"
      },
      {
        "match_number": 2,
        "content": "Getting Started \u2014 Chameleon Cloud Documentation\nGetting Started\nEdit on GitHub\nGetting Started\n\uf0c1\nWelcome to the Chameleon testbed! We\u2019re excited your here.\nGet a head start on leveraging the power of Chameleon for your research\nprojects by following our guide below.\nAt the end of this tutorial, you will have learned how to:\nCreate a free user account on Chameleon and link it with your own\ninstitution Single Sign-On (SSO) through the\nGlobus\nAuth service.\nApply for a project on\nChameleon\nand add users to projects.\nUse Chameleon\u2019s\nHardware Discovery Catalog\nand the\nHost Calendars\nto search for available hardware that meets your\nresearch needs.\nReserve Chameleon resources using leases.\nConfigure, launch, and connect to an instance running on a bare metal server.\nLet\u2019s get started!\nNote\nIf you already have a Chameleon account and project, you can skip the pre-reqs\nto\nthis section below\n.\nPre-Req: Creating a Chameleon Account\n\uf0c1\nBefore you can use Chameleon, you need to create a free",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/getting-started/index.html"
      },
      {
        "match_number": 3,
        "content": "Leveraging New and Improved Chameleon Images | Chameleon\nWe're happy to announce refreshed, improved, enhanced, and streamlined--pick your favorite adjective--images to support your experiments on Chameleon! The images can be found in the usual places: directly in the\nChameleon dashboard GUI\nunder Compute -> Images, or listed in the\nAppliance Catalog\n. The Chameleon team supports 8 images (along with 2 OpenStack Heat templates), all of which are available in the Appliance Catalog.\nThe Building Blocks\nOur images are based on two of the most popular Linux distributions, Ubuntu and CentOS. We include a number of drivers, tools, and helpful resources in our images to smooth the process of standing up experiments on Chameleon. We'll first discuss the operating systems we support and then we can dive into the recent enhancements we've made.\nUbuntu\nUbuntu",
        "source": "https://chameleoncloud.org/blog/2025/05/19/leveraging-new-and-improved-chameleon-images/"
      },
      {
        "match_number": 4,
        "content": "guide to reserve any hardware on Chameleon.\nOnce we have found the hardware we want to use and the site where it is\nlocated, we are now ready to make our first reservation!\nMy First Reservation: Reseving a Node\n\uf0c1\nOn Chameleon, as opposed to other testbeds or commerical clouds, you must\nreserve your resources before you can launch an instance on them. Chameleon\nsupports both\non-demand\nand\nadvanced\nreservations. We will use an on-demand\nreservation for this guide, but note that you can reserve resources in advance,\nwhich is often necessary to get access to popular, scarce hardware like GPUs.\nStep 1: Access a Testbed Site\n\uf0c1\nAs mentioned above, different Chameleon sites have different hardware. To log\nin to a Chameleon site from the main\nChameleon\nportal page, click on the\n\u201cExperiment\u201d tab on the nav bar at the top. From the dropdown, select a\nChameleon site. We will be working with nodes available in either\nCHI@UC\nor\nCHI@TACC\n, so you can select one of those.\nSelect a site to use.\n\uf0c1",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/getting-started/index.html"
      }
    ]
  },
  {
    "query": "How to launch a virtual machine using GUI?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "Provide your Chameleon username (found in your\nprofile\n)\nNote\nNew to projects?\nRead our comprehensive\nproject management guide\nfor details on project concepts, user roles, allocations, and management.\nStart Using Chameleon Hardware\n\uf0c1\nCongratulations, you are now ready to launch your first instance! Instances are\nmuch like what you may expect to find in a virtual machine, except here the\ninstances are on bare metal nodes - the core feature of Chameleon \ud83d\ude0e. A bare\nmetal node is a whole physical server to which you, and you alone, have\nexclusive root access.\nNote\nChameleon also offers a multi-tenant, virtualized cloud, with fewer\nfunctionalities and a smaller scale. See\nKVM\nfor more details.\nBelow, we will walk through the steps on how to launch a bare metal instance using the\ngraphical user interface (GUI) or web application on the\nChameleon\nportal.\nSee the\nfinal section\nto complete the same steps using Jupyter\nand\npython-chi",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/getting-started/index.html"
      },
      {
        "match_number": 2,
        "content": "here\nConnect to your instance via SSH\nInstalling Xilinx Tools\n\uf0c1\nCompiling code for FPGAs requires the Xilinx Vitis\u2122 software platform, which provides a comprehensive development environment for creating FPGA-accelerated applications. The Vitis platform includes the Vitis Unified Software Platform, Vitis Core Development Kit, and Vitis AI Development Kit.\nFlashing the FPGA with your bitstream requires the Xilinx Runtime (XRT) tools, which are part of the Vitis platform. The XRT tools provide a command-line interface for managing FPGA devices, including programming the FPGA with your bitstream. You can also install the XRT environment separately from the Vitis platform, although functionality may be limited.\nGuidelines for installing the Vitis platform can be found in the\nAMD documentation\n. The installation requirements for Ubuntu are also provided in the documentation\nhere\n.\nGuidelines for installing the Xilinx Runtime (XRT) tools can be found in the\nXRT documentation\n.",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/technical/fpga/index.html"
      },
      {
        "match_number": 3,
        "content": ".\nLaunching Your Instance\n\uf0c1\nAfter your reservation becomes active:\nLaunch an instance using a supported upstream image for the Xilinx Runtime. Chameleon suggests using our supported CC-Ubuntu 24.04 as a base image. Advanced users may choose to use any upstream image that Xilinx supports. Find a list of supported upstream images\nhere\nConnect to your instance via SSH\nInstalling Xilinx Tools\n\uf0c1\nCompiling code for FPGAs requires the Xilinx Vitis\u2122 software platform, which provides a comprehensive development environment for creating FPGA-accelerated applications. The Vitis platform includes the Vitis Unified Software Platform, Vitis Core Development Kit, and Vitis AI Development Kit.",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/technical/fpga/index.html"
      },
      {
        "match_number": 4,
        "content": "KVM \u2014 Chameleon Cloud Documentation\nKVM\nEdit on GitHub\nKVM\n\uf0c1\nOpenStack is an Infrastructure as a Service (IaaS) platform that allows you to\ncreate and manage virtual environments. Chameleon provides an installation of\nOpenStack\nXena\nusing the\nKVM virtualization technology at the\nKVM@TACC\nsite. Since the KVM hypervisor is used\non this cloud, any virtual machines you upload must be compatible with KVM.\nThis documentation provide basic information about how to use the OpenStack web\ninterface and provides some information specific to using OpenStack KVM on\nChameleon. The interface is similar to the bare metal sites\nCHI@TACC\nand\nCHI@UC\n. However, the resources that you are using are virtual, rather than\nbeing tied to physical nodes. Familiarity with some concepts, such as\nKey Pairs\nare also required for KVM.\nNote\nGPU Access on KVM\nWe have GPUs available NOW on\nKVM@TACC\n. Launching an instance on a\nGPU-enabled flavor requires a reservation, similar to bare metal resources",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/technical/kvm/index.html"
      }
    ]
  },
  {
    "query": "How do I add SSH keys to my profile?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "In a Mac OS X system, click on your launchpad and search for terminal\nIn an Ubuntu system you can use the keys Ctrl+Alt+T (for desktop version)\nAccess the SSH key pairs directory; in your terminal type the command:\ncd ~/.ssh\nCreate your ssh key pair (public and private keys); in the\n.ssh\ndirectory, type the command:\nssh-keygen\nPress the enter key, then enter a name for your key.\nAfter completing the previous step, a message stating \u201cEnter file in which to save the Key\u201d will be displayed. Enter the name of your preference. I will use in this example the name \u201csample-key\u201d. Then press the enter key.\nThen, you will be requested to enter a passphrase for your key. Entering a passphrase is not necessary, so you can proceed to leave it blank and press enter. You will receive a message \u201cEnter same passphrase again:\u201d so just leave it blank and press enter.\nSince we are still in the .ssh directory, now you can see your newly created key by typing\nls\n.\nYou will see two files:",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 2,
        "content": "I am new to SSH, how do I create my own SSH key pairs on Linux/macOS?\nWhenever you are creating an instance in Chameleon, you will have an option to select an Public SSH Key imported from your desktop. Once selected, this public key will be inserted into the instance's\n~/.ssh/known_hosts\nfile. When a user attempts to connect to the instance, the private key provided by the user will be validated against this public key in the known_hosts file. These instructions will help you create an SSH key pair and log in to your instance on Chameleon.\nFor Linux/ Mac OS X\nOpen a terminal window:\nIn a Mac OS X system, click on your launchpad and search for terminal\nIn an Ubuntu system you can use the keys Ctrl+Alt+T (for desktop version)\nAccess the SSH key pairs directory; in your terminal type the command:\ncd ~/.ssh\nCreate your ssh key pair (public and private keys); in the\n.ssh\ndirectory, type the command:\nssh-keygen\nPress the enter key, then enter a name for your key.",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 3,
        "content": "Then, you will be requested to enter a passphrase for your key. Entering a passphrase is not necessary, so you can proceed to leave it blank and press enter. You will receive a message \u201cEnter same passphrase again:\u201d so just leave it blank and press enter.\nSince we are still in the .ssh directory, now you can see your newly created key by typing\nls\n.\nYou will see two files:\nsample-key (containing the private key)\nsample-key.pub (containing the public key)\nYou may view your\nsample-key.pub\ncontents by typing:\ncat sample-key.pub\nSelect and copy the contents displayed starting ssh-rsa all the way to the end. To add a key pair in Chameleon, follow the instructions for\nimporting key pair\nand paste the contents of the key in the\nPublic Key\ntext entry.\nAfter you have created a key pair and imported it in Chameleon, you can connect to any instance configured with this key pair. To do so you can use the command:\nssh -i ~/.ssh/sample-key cc@<instance ip address>\nFor Windows",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      },
      {
        "match_number": 4,
        "content": "What if I need a lease that is longer than the limitation (i.e., 7 days)?\nIf you know from the start that your lease has will require more than a week and cannot be broken into two or more 7 day leases because of the nature of the experiment, you can\ncontact Chameleon staff via the ticketing system\nto request a one-time exception to create a longer lease. The request has to be submitted by the project PI and should contain a detailed justification for why a contiguous lease is needed. Please note, that these requests may take a longer time to consider as needed to understand all the details.\nI am new to SSH, how do I create my own SSH key pairs on Linux/macOS?\nWhenever you are creating an instance in Chameleon, you will have an option to select an Public SSH Key imported from your desktop. Once selected, this public key will be inserted into the instance's\n~/.ssh/known_hosts",
        "source": "https://chameleoncloud.org/learn/frequently-asked-questions/"
      }
    ]
  },
  {
    "query": "How do I take  snapshots of an instance?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "To create a new instance, follow the steps below:\nStep 1: Go to the Instances Dashboard\n\uf0c1\nIn the sidebar from your site dasboard, click\nCompute\n, then click\nInstances\nStep 2: Create a New Instance\n\uf0c1\nClick on the\nLaunch Instance\nbutton in the toolbar and the\nLaunch\nInstance\nwizard will load.\nDetails\nEnter the main details about your instance, including which reservation to use.\n\uf0c1\nGive your instance a descriptive name (\nmy-first-instance\n) and a short\ndescription (optional). You will also need to specify the lease that you\nwill use for this instance. You can select the reservation that you just\ncreated from the dropdown. We can also specify how many instances we want to\nlaunch. The default is one and we have one node so we\u2019ll stick with that.\nSource\nSelect your image source.\n\uf0c1\nIn the next section, we can configure a source that we will use for our\ninstance. This can be an image, a snapshotted image, a volume, or some other",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/getting-started/index.html"
      },
      {
        "match_number": 2,
        "content": "cc-generate-openrc\nto get a fresh set of credentials. And then don't forget to source the openrc file again to pick up the new credentials!\nWhen you log in, you'll be greeted with a friendly message of the day that offers pointers to docs, storage tips, and where to get help. Need to save your work?\ncc-snapshot\nmakes it easy to capture your instance and turn it into a reusable image. For data storage off your instance,\nrclone\nis ready to go in the image so you can mount object storage buckets directly into your environment. And thanks to cloud-init, your instance is automatically configured at boot\u2014setting hostnames, attaching volumes, running user scripts, providing credentials, and more.\nFinally, all the essential drivers are bundled into the image, so networking, GPUs, and other hardware work out of the box.\nBring Your Own Images\nIf you are not able to use a Chameleon-supported image, you can create your own. To do this we recommend using our\nCC-Images tool",
        "source": "https://chameleoncloud.org/blog/2025/05/19/leveraging-new-and-improved-chameleon-images/"
      },
      {
        "match_number": 3,
        "content": "Images \u2014 Chameleon Cloud Documentation\nImages\nEdit on GitHub\nImages\n\uf0c1\nAll instances in Chameleon, whether KVM or bare metal, are running off disk images. The content of these disk images can be snapshotted at any point in time, which allows you to save your work and launch new instances from updated images later. While OpenStack KVM has built-in support for snapshotting in the Horizon web interface and via the command line, bare metal instances require a more complex process.\nTo work around this limitation, we provide the\ncc-snapshot\nutility that you can execute from inside your running instance. The\ncc-snapshot\nutility is pre-installed in all Chameleon supported appliances. You can find our appliances from the\nAppliance Catalog\n.\nThe image service on Chameleon uses\nOpenStack Glance\n. This documentation demonstrates how to accomplish common tasks with\nImages\nusing the GUI and the CLI.\nImprove this page:\nReport an issue or suggest improvements",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/technical/images/index.html"
      },
      {
        "match_number": 4,
        "content": "instance on the node that has been leased to you. In the following steps, we\nwill walk through how to configure and launch an instance on the reserved\nhardware. In the GUI, this process will feel similar to the process we just\nfollowed to create a new lease. You will specify your instance details in a\nform and submit it to the system. Chameleon will then automatically configure,\nbuild, and launch your instance.\nNote\nBuilding and launching an instance on bare metal (especially when using beefy appliances and images) can take a long time. After creating your instance, you may need to wait for 10 to 20 minutes before the instance will be running.\nTo create a new instance, follow the steps below:\nStep 1: Go to the Instances Dashboard\n\uf0c1\nIn the sidebar from your site dasboard, click\nCompute\n, then click\nInstances\nStep 2: Create a New Instance\n\uf0c1\nClick on the\nLaunch Instance\nbutton in the toolbar and the\nLaunch\nInstance\nwizard will load.\nDetails",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/getting-started/index.html"
      }
    ]
  },
  {
    "query": "How do I monitor power usage for my instance?",
    "embedding model": "sentence-transformers/all-mpnet-base-v2",
    "matches": [
      {
        "match_number": 1,
        "content": "-\nTemperature monitoring\n: Only available when nodes are powered on\nGetting Started\n\uf0c1\nFor system-level monitoring\n: Use\nipmitool\ndcmi\npower\nreading\nto get current power consumption\nFor application-level monitoring\n: Use\netrace2\n<your_program>\nto measure energy consumption of specific applications\nFor detailed instructions\n: See the\npower monitoring blog post\nNote\nPower monitoring tools use software-based estimation models and may include system overhead. For accurate measurements, consider baseline readings and validate with multiple tools when possible.\nImprove this page:\nReport an issue or suggest improvements",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/technical/power_monitoring/index.html"
      },
      {
        "match_number": 2,
        "content": "Power Monitoring \u2014 Chameleon Cloud Documentation\nPower Monitoring\nEdit on GitHub\nPower Monitoring\n\uf0c1\nChameleon provides comprehensive power monitoring capabilities to help researchers measure and understand the energy consumption of their experiments.\nTip\nFor detailed examples, tool installation instructions, and advanced techniques, see our\nPower Measurement and Management blog post\n.\nAvailable Power Monitoring Methods\n\uf0c1\nInfrastructure-level monitoring:\n- Automatic power and temperature data collection via IPMI/DCMI\n- Works on most server-class Intel and AMD nodes\n- Provides system-level power consumption data\nApplication-level monitoring:\n-\netrace2\n: Energy measurement for individual applications using Intel RAPL\n-\nperf\n: Quick RAPL energy measurements\n- Scaphandre: Advanced per-process power tracking\nLong-term monitoring:\n- Prometheus exporters and Grafana for continuous data collection and visualization\nHardware Support\n\uf0c1\nPower monitoring support varies by node type:\n-\nFull support",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/technical/power_monitoring/index.html"
      },
      {
        "match_number": 3,
        "content": "Application-level monitoring:\n-\netrace2\n: Energy measurement for individual applications using Intel RAPL\n-\nperf\n: Quick RAPL energy measurements\n- Scaphandre: Advanced per-process power tracking\nLong-term monitoring:\n- Prometheus exporters and Grafana for continuous data collection and visualization\nHardware Support\n\uf0c1\nPower monitoring support varies by node type:\n-\nFull support\n: Most Intel and AMD compute/GPU nodes\n-\nLimited support\n: Specialized nodes (FPGAs, ARM64)\n-\nTemperature monitoring\n: Only available when nodes are powered on\nGetting Started\n\uf0c1\nFor system-level monitoring\n: Use\nipmitool\ndcmi\npower\nreading\nto get current power consumption\nFor application-level monitoring\n: Use\netrace2\n<your_program>\nto measure energy consumption of specific applications\nFor detailed instructions\n: See the\npower monitoring blog post\nNote",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/technical/power_monitoring/index.html"
      },
      {
        "match_number": 4,
        "content": "\uf0c1\nService Units\n\uf0c1\nOne Service Unit (SU) is equivalent to one hour of usage of one allocatable\nresource (physical hosts, network segments, or floating IPs). For example, a\nreservation for 5 Skylake compute nodes for 8 hours would use 40 SUs. However,\nfor certain types of resources, more SUs will be charged. For more details about\nallocation charges, see\nhere\n.\nProject Details\n\uf0c1\nClicking on a project from either the\nDashboard\nmain page or the\nProjects\npage will allow you to manage one of your approved\nProjects\n.\nProject details\n\uf0c1\nIn the details page of your project, you may\nrecharge or extend your\nallocation\n,\nview allocation usage details\n,\nand\nmanage users\nof your project.\nRecharge or Extend Your Allocation\n\uf0c1\nAllocation actions\n\uf0c1\nIn the\nAllocations\nsection of your\nProject Details\n, you may view your\nproject start and end dates, current\nService Unit\nusage and request a\nService Unit\nrecharge or project extension. To request a\nService Unit\nrecharge or\nProject\nextension, click the\ngear",
        "source": "https://chameleoncloud.readthedocs.io/en/latest/user/project.html"
      }
    ]
  }
]